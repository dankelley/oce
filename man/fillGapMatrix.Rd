% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.R
\name{fillGapMatrix}
\alias{fillGapMatrix}
\title{Fill a Gap in a Matrix}
\usage{
fillGapMatrix(m, span = 2, debug = getOption("oceDebug"))
}
\arguments{
\item{m}{a numeric matrix.}

\item{span}{a vector containing 1 or 2 integers. In the first case, the value
is repeated before processing continues.  The first element specifies the
maximum span of neighbours in the along-row direction, i.e. the first index
of the matrix. The second element does the same thing, but for the
along-column direction (i.e. the second index). The default value of 2 means
to interpolate only if the nearest neighbours are non-NA. Higher
values will span larger gaps; see Example 3.}

\item{debug}{an integer specifying whether debugging information is
to be printed during the processing. This is a general parameter that
is used by many \code{oce} functions. Generally, setting \code{debug=0}
turns off the printing, while higher values suggest that more information
be printed. If one function calls another, it usually reduces the value of
\code{debug} first, so that a user can often obtain deeper debugging
by specifying higher \code{debug} values.}
}
\value{
\link{fillGapMatrix} returns matrix, with NA values replaced
by interpolated values as dictated by the function parameters.
}
\description{
Sequences of NA values are replaced with values computed by linear
interpolation along rows and/or columns, provided that the neighbouring
values are sufficiently close, as defined by the \code{span} parameter.  If
interpolation can be done across both the row and column directions, then the
two values are averaged.
}
\examples{
library(oce)
m <- matrix(1:20, nrow = 5)
# Example 1: interpolate past across single points
m[2, 3] <- NA
m[3, 3] <- NA
m[4, 2] <- NA
m
fillGapMatrix(m)
# Example 2: cannot interpolate across larger groups by default
m <- matrix(1:20, nrow = 5)
m[2:3, 2:3] <- NA
m
fillGapMatrix(m)
# Example 3: increasing span lets us cover gaps of size 1 or 2
fillGapMatrix(m, span = 3)

}
\author{
Dan Kelley
}
